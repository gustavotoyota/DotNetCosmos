using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace EntityFramework.Models
{
    /*
     * Table: Maps the entity to a specific table in the database
     * 
     * - name: The name of the table in the database
     * - Schema: The database schema of the table
     */

    [Table("DataAnnotations")]
    public class SchemaAnnotations
    {
        /*
         * Key: Marks the property as the primary key
         * 
         * By default, EF creates an IDENTITY column in the database for every primary key
         */

        [Key]
        public required string Id { get; set; }

        /*
         * Column: Allows granular control over the database column
         * 
         * - name: The name of the column in the database
         * - TypeName: The database provider specific data type
         * - Order: The order in which the column appears in the table
         */

        [Column(name: "Name")]
        public required string Name { get; set; }

        /*
         * MaxLength: Specifies the maximum length of the string in the database
         */

        [MaxLength(200)]
        public required string Description { get; set; }

        /*
         * ForeignKey: Configures a foreign key in the relationship between two entities
         * 
         * Can be applied in three different ways:
         * 1. [ForeignKey(NavigationPropertyName)] in the dependent entity
         * 2. [ForeignKey(ForeignKeyPropertyName)] in the dependent entity
         * 3. [ForeignKey(ForeignKeyPropertyName)] in the principal entity
         */

        [ForeignKey("Foreign")]
        public required string ForeignId { get; set; } // Foreign key property
        public required ForeignThing Foreign { get; set; } // Navigation property

        /*
         * NotMapped: Excludes the property from the database
         */

        [NotMapped]
        public required string NotMappedProperty { get; set; }

        /*
         * InverseProperty: Specifies the inverse of a navigation property
         * 
         * Used to disambiguate when multiple navigation properties of the same type
         * are present on the other side of a relationship
         */

        [InverseProperty("SchemaAnnotations")]
        public required ICollection<ForeignThing> ForeignThings { get; set; }

        /*
         * DatabaseGenerated: Specifies how the database generates values for a property
         * 
         * - DatabaseGeneratedOption.None: The database does not generate values for this property
         * - DatabaseGeneratedOption.Identity: The database generates a value when a row is inserted
         *   - Please note that the way the value of the Identity property will be generated by the database depends on the database provider.
         *   - It can be identity, rowversion or GUID. SQL Server makes an identity column for an integer property.
         * - DatabaseGeneratedOption.Computed: The database generates a value when a row is inserted or updated
         *   - Note: EF does not include DatabaseGeneratedOption.Computed columns in INSERT or UPDATE statements.
         */

        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        public DateTime CreatedDate { get; set; }
    }

    public class ForeignThing
    {
    }
}
